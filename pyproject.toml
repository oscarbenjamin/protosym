[project]
name = "protosym"
dynamic = ["version"]
requires-python = ">=3.8"
license = "BSD-3-Clause"
description = "ProtoSym"
readme = "README.rst"
authors = [
    { name = "Oscar Benjamin", email = "oscar.j.benjamin@gmail.com" },
]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
all = [
    "numpy",
    "sympy",
    "llvmlite",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "VERSION.txt"

[tool.hatch.build]
include = [
    "src",
    "docs",
    "tests",
    "benchmarks",

    "requirements-*.txt",

    "noxfile.py",
    "quicktest.sh",

    "README.rst",
    "CONTRIBUTING.rst",
    "CODE_OF_CONDUCT.rst",
    "LICENSE.rst",

    "pyproject.toml",
    "VERSION.txt",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/protosym",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "xdoctest[colors]",
    "pytest-cov",
    "coverage[toml]",
    "sympy",
    "numpy",
    "llvmlite",
]

[tool.hatch.envs.test.scripts]
test = "pytest {args:tests}"
doctest = "xdoctest --quiet {args:protosym all}"
coverage = "pytest --cov=protosym --cov-report=html {args:tests}"

[tool.hatch.envs.types]
dependencies = [
    "mypy",
    "pyright",
]

[tool.hatch.envs.types.scripts]
mypy-check = "mypy {args:src tests}"
pyright-check = "pyright {args:src tests}"

[tool.hatch.envs.pre-commit]
dependencies = [
    "ruff",
    "black",
    "pre-commit",
    "pre-commit-hooks",
]

[tool.hatch.envs.pre-commit.scripts]
run = "pre-commit run {args:--all-files --show-diff-on-failure}"

[tool.hatch.envs.docs]
dependencies = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinx-autobuild",
]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs docs/_build"
serve = "sphinx-autobuild --open-browser --watch src --watch docs docs docs/_build"

[tool.hatch.envs.matrix]
dependencies = [
    "pytest",
    "xdoctest[colors]",
]

[[tool.hatch.envs.matrix.matrix]]
python = [
    "3.8",
    "3.9",
    "3.10",
    "3.11",
    "3.12",
]

[tool.hatch.envs.matrix.scripts]
test = "pytest {args:tests}"
doctest = "xdoctest --silent {args:protosym all}"

[tool.ruff.lint]
extend-select = [
    "UP",  # pyupgrade
    "RUF",  # ruff-specific checks
    "C",  # mccabe
    "D",  # pydocstyle
    "I",  # isort
    "E",  # pycodestyle
    "W",  # pycodestyle
    "C4",  # flake8-comprehensions
    "T10",  # flake8-debugger
    # "PL",  # pylint
]
extend-ignore = [
    "RUF005",  # list concatenation
]

[tool.ruff.per-file-ignores]
"tests/*" = ["D100", "D104", "PLR2004", "PLR0124"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["protosym"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if _TYPE_CHECKING:",
    "@overload",
]

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
module = [
    'jinja2',
    'llvmlite',
    'llvmlite.binding',
    'py',
    'pytest',
    'symengine',
    'numpy',
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "sympy",
    "sympy.core.function",
    "rust_protosym",
]
follow_imports = "skip"
ignore_missing_imports = true

[tool.pyright]
include = ["src", "tests"]
reportMissingImports = false
